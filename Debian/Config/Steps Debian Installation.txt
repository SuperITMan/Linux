====================================================================================
============================ Etapes installation Debian ============================
====================================================================================

#Changer port SSH
nano /etc/ssh/sshd_config

#Non nécessaire
iptables -A INPUT -p tcp --dport ssh -j ACCEPT 
iptables -P INPUT DROP
iptables -A INPUT -m conntrack --ctstate ESTABLISHED -j ACCEPT
iptables -A OUTPUT -p icmp -m conntrack --ctstate NEW,ESTABLISHED,RELATED -j ACCEPT 
iptables -A INPUT -p icmp -j ACCEPT
#Nécessaire àpd en-dessous

#Installation Apache2
apt-get install apache2 -y


#Installation MySQL
apt-get install mysql-server -y

--> Entrer mdp root 2x

#Sécuriser MySQL
mysql_secure_installation
--> Say yes for every question


#Installation PHP5
apt-get install php5 php-pear php5-mysql -y

#Activer le mod_rewrite d'Apache2 pour Wordpress
cd /etc/apache2/mods-available
aenmod rewrite.load

#Pour site WP, ajouter les lignes suivantes dans le fichier de conf de sites-available
<Directory /usr/share/wordpress>
	Options FollowSymLinks
	AllowOverride Limit Options FileInfo
	DirectoryIndex index.php
	Require all granted
</Directory>

#Ajout d'un script "firewall" pour gérer les iptables
nano /etc/init.d/firewall

#!/bin/sh
### BEGIN INIT INFO
# Provides:          firewall
# Required-Start:    $local_fs $remote_fs $network $syslog $named
# Required-Stop:     $local_fs $remote_fs $network $syslog $named
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# X-Interactive:     true
# Short-Description: firewall - iptables
# Description:       Start the web server and associated helpers
#  This script will start apache2, and possibly all associated instances.
#  Moreover, it will set-up temporary directories and helper tools such as
#  htcacheclean when required by the configuration.
### END INIT INFO

# Vider les tables actuelles
iptables -t filter -F

# Vider les règles personnelles
iptables -t filter -X

# Interdire toute connexion entrante et sortante
iptables -t filter -P INPUT DROP
iptables -t filter -P FORWARD DROP
iptables -t filter -P OUTPUT DROP

# ---

# Ne pas casser les connexions etablies
iptables -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
iptables -A OUTPUT -m state --state RELATED,ESTABLISHED -j ACCEPT

# Autoriser loopback
iptables -t filter -A INPUT -i lo -j ACCEPT
iptables -t filter -A OUTPUT -o lo -j ACCEPT

# ICMP (Ping)
iptables -t filter -A INPUT -p icmp -j ACCEPT
iptables -t filter -A OUTPUT -p icmp -j ACCEPT

# ---

# SSH In
iptables -t filter -A INPUT -p tcp --dport <ssh_port> -j ACCEPT

# SSH Out
iptables -t filter -A OUTPUT -p tcp --dport <ssh_port> -j ACCEPT

# DNS In/Out
iptables -t filter -A OUTPUT -p tcp --dport 53 -j ACCEPT
iptables -t filter -A OUTPUT -p udp --dport 53 -j ACCEPT
iptables -t filter -A INPUT -p tcp --dport 53 -j ACCEPT
iptables -t filter -A INPUT -p udp --dport 53 -j ACCEPT

# NTP Out
iptables -t filter -A OUTPUT -p udp --dport 123 -j ACCEPT

# HTTP + HTTPS Out
iptables -t filter -A OUTPUT -p tcp --dport 80 -j ACCEPT
iptables -t filter -A OUTPUT -p tcp --dport 443 -j ACCEPT

# HTTP + HTTPS In
iptables -t filter -A INPUT -p tcp --dport 80 -j ACCEPT
iptables -t filter -A INPUT -p tcp --dport 443 -j ACCEPT
iptables -t filter -A INPUT -p tcp --dport 8443 -j ACCEPT

